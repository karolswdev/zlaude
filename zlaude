#!/usr/bin/env bash

# zlaude - A wrapper for Claude Code that uses z.ai API servers
# This allows you to use z.ai without modifying your global Claude Code settings

set -e

ZLAUDE_CONFIG_DIR="${ZLAUDE_CONFIG_DIR:-$HOME/.zlaude}"
ZLAUDE_CONFIG_FILE="${ZLAUDE_CONFIG_FILE:-$ZLAUDE_CONFIG_DIR/config}"

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to display usage
usage() {
    cat << EOF
Usage: zlaude [OPTIONS] [CLAUDE_ARGS...]

A wrapper for Claude Code that uses z.ai API servers without modifying
your global Claude Code settings.

OPTIONS:
    --api-key KEY       Use this API key instead of the configured one
    --configure         Set up or update your z.ai API key
    --help              Show this help message

CLAUDE_ARGS:
    Any arguments are passed directly to the claude command.

EXAMPLES:
    zlaude                    # Launch Claude Code with z.ai
    zlaude --configure        # Set up your z.ai API key
    zlaude --api-key KEY      # Use a specific API key

CONFIGURATION:
    Config file: $ZLAUDE_CONFIG_FILE

    The config file should contain:
        ZLAUDE_API_KEY=your_api_key_here

ENVIRONMENT VARIABLES:
    ZLAUDE_API_KEY          Override the API key from config file
    ZLAUDE_CONFIG_DIR       Config directory (default: ~/.zlaude)
    ZLAUDE_CONFIG_FILE      Config file path (default: ~/.zlaude/config)

EOF
}

# Function to configure API key
configure() {
    echo -e "${GREEN}zlaude configuration${NC}"
    echo ""
    echo "Please enter your z.ai API key."
    echo "You can get one from: https://z.ai/manage-apikey/apikey-list"
    echo ""
    read -p "API Key: " api_key </dev/tty

    if [ -z "$api_key" ]; then
        echo -e "${RED}Error: API key cannot be empty${NC}"
        exit 1
    fi

    # Create config directory if it doesn't exist
    mkdir -p "$ZLAUDE_CONFIG_DIR"

    # Write config file
    echo "ZLAUDE_API_KEY=$api_key" > "$ZLAUDE_CONFIG_FILE"
    chmod 600 "$ZLAUDE_CONFIG_FILE"

    echo -e "${GREEN}Configuration saved to $ZLAUDE_CONFIG_FILE${NC}"
    echo ""
    echo "You can now run 'zlaude' to start Claude Code with z.ai!"
}

# Parse command line arguments
API_KEY_OVERRIDE=""
while [[ $# -gt 0 ]]; do
    case $1 in
        --help|-h)
            usage
            exit 0
            ;;
        --configure)
            configure
            exit 0
            ;;
        --api-key)
            API_KEY_OVERRIDE="$2"
            shift 2
            ;;
        *)
            break
            ;;
    esac
done

# Determine which API key to use (priority: CLI arg > env var > config file)
ZLAUDE_API_KEY="${API_KEY_OVERRIDE:-${ZLAUDE_API_KEY:-}}"

if [ -z "$ZLAUDE_API_KEY" ] && [ -f "$ZLAUDE_CONFIG_FILE" ]; then
    # Source the config file
    source "$ZLAUDE_CONFIG_FILE"
fi

# Check if API key is set
if [ -z "$ZLAUDE_API_KEY" ]; then
    echo -e "${RED}Error: No z.ai API key configured${NC}"
    echo ""
    echo "Please run 'zlaude --configure' to set up your API key,"
    echo "or set the ZLAUDE_API_KEY environment variable,"
    echo "or use the --api-key option."
    exit 1
fi

# Check if claude command is available
if ! command -v claude &> /dev/null; then
    echo -e "${RED}Error: 'claude' command not found${NC}"
    echo ""
    echo "Please install Claude Code first:"
    echo "  npm install -g @anthropic-ai/claude-code"
    exit 1
fi

# Set environment variables for z.ai
export ANTHROPIC_AUTH_TOKEN="$ZLAUDE_API_KEY"
export ANTHROPIC_BASE_URL="https://api.z.ai/api/anthropic"
export API_TIMEOUT_MS="3000000"

# Set model mappings for z.ai GLM models
export ANTHROPIC_DEFAULT_HAIKU_MODEL="glm-4.5-air"
export ANTHROPIC_DEFAULT_SONNET_MODEL="glm-4.6"
export ANTHROPIC_DEFAULT_OPUS_MODEL="glm-4.6"

# Launch claude with all remaining arguments
exec claude "$@"
